package com.zeus.controller;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import com.zeus.domain.AddressV;
import com.zeus.domain.CardV;
import com.zeus.domain.MemberVa;
import lombok.extern.java.Log;

@Log
@Controller
public class MemberController16 {
// 입력값을 검증할 도메인 클래스에 @Validated를 지정한다.
	@RequestMapping(value = "/registerValidation2", method = RequestMethod.POST)
	public String registerValidation4(@Validated @ModelAttribute("member") MemberVa member, BindingResult result) {
		log.info("registerValidation4");
		if (result.hasErrors()) {
			return "16/registerValidation4Form"; // 뷰 파일명
		}
		log.info("member.getUserId() = " + member.getUserId());
		log.info("member.getBirthDate() = " + member.getDateOfBirth());
		AddressV address = member.getAddress();
		if (address != null) {
			log.info("address != null address.getPostCode() = " + address.getPostCode());
			log.info("address != null address.getLocation() = " + address.getLocation());
		} else {
			log.info("address == null");
		}
		List<CardV> cardList = member.getCardList();
		if (cardList != null) {
			log.info("cardList != null = " + cardList.size());
			for (int i = 0; i < cardList.size(); i++) {
				CardV card = cardList.get(i);
				log.info("card.getNo() = " + card.getNo());
				log.info("card.getValidMonth() = " + card.getValidMonth());
			}
		} else {
			log.info("cardList == null");
		}
		return "16/success";
	}

	@RequestMapping(value = "/registerValidation4Form01", method = RequestMethod.GET)
	public String registerForm01(Model model) {
		log.info("registerValidation4Form01");
		model.addAttribute("member", new MemberVa());
		return "16/registerValidation4Form"; // 뷰 파일명
	}

	@RequestMapping(value = "/registerValidation4Form02", method = RequestMethod.GET)
	public String registerForm02(Model model) {
		log.info("registerValidation4Form02");
		MemberVa member = new MemberVa();
		member.setPassword("1234");
		member.setEmail("aaa@ccc.com");
		member.setUserName("홍길동");
		AddressV address = new AddressV();
		address.setPostCode("080908");
		address.setLocation("seoul");
		member.setAddress(address);
		List<CardV> cardList = new ArrayList<CardV>();
		CardV card1 = new CardV();
		card1.setNo("123456");
		Calendar cal = Calendar.getInstance();
		cal.set(Calendar.YEAR, 2021);
		cal.set(Calendar.MONTH, 9);
		cal.set(Calendar.DAY_OF_MONTH, 8);
		card1.setValidMonth(cal.getTime());
		cardList.add(card1);
		CardV card2 = new CardV();
		card2.setNo("456786");
		cal.set(Calendar.YEAR, 2022);
		cal.set(Calendar.MONTH, 11);
		cal.set(Calendar.DAY_OF_MONTH, 7);
		card2.setValidMonth(cal.getTime());
		cardList.add(card2);
		member.setCardList(cardList);
		cal.set(Calendar.YEAR, 1988);
		cal.set(Calendar.MONTH, 10);
		cal.set(Calendar.DAY_OF_MONTH, 7);
		member.setDateOfBirth(cal.getTime());
		model.addAttribute("member", member);
		return "16/registerValidation4Form"; // 뷰 파일명
	}
}